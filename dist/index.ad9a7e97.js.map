{"mappings":"AAeA,MAAM,QAAQ;IACZ;IACA;AACF;AAEA,SAAS,cAAc,IAAY,EAAE,KAAY,EAAE,GAAG,QAAwB;IAC5E,MAAM,UAAU;QACd;QACA,OAAO;YACL,GAAG,KAAK;YACR;QACF;QACA,KAAK,MAAM,GAAG,IAAI;QAClB,KAAK,MAAM,GAAG,IAAI;IACpB;IAEA,QAAQ,GAAG,CAAC;IACZ,OAAO;AACT;AAEA,SAAS,WAAW,OAAoB;IACtC,QAAQ,GAAG,CAAC,gCAAgC;IAC5C,OAAO;QACL,QAAQ,CAAC,UAA0B,OAAO,SAAS;QACnD,SAAS,IAAM,QAAQ;IACzB;AACF;AAEA,SAAS,OAAO,OAAqB,EAAE,OAAoB;IACzD,QAAQ,GAAG,CAAC,uBAAuB;IAEnC,IAAI,OAAO,YAAY,UAAU;QAC/B,QAAQ,WAAW,CAAC,SAAS,cAAc,CAAC;QAC5C;IACF;IAEA,MAAM,aAAa,SAAS,aAAa,CAAC,QAAQ,IAAI;IACtD,sCAAsC;IACtC,OAAO,IAAI,CAAC,QAAQ,KAAK,EAAE,MAAM,CAAC,CAAA,MAAO,QAAQ,YAAY,OAAO,CAAC,CAAA,OAAQ,UAAU,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK;IAC7G,QAAQ,WAAW,CAAC;IAEpB,sBAAsB;IACtB,QAAQ,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA,QAAS,OAAO,OAAO;AACxD;AAEA,SAAS,QAAQ,IAAiB;IAChC,KAAK,SAAS,GAAG;AACnB;AAEA,MAAM,qBACJ,oBAAC;;;;;;;GAAI,wBAEH,oBAAC;;;;;;;GAAI;AAKT,MAAM,OAAO,WAAW,SAAS,cAAc,CAAC;AAChD,KAAK,MAAM,CAAC","sources":["index.tsx"],"sourcesContent":["type Props = {\n  [key: string]: any;\n  children?: ReactElement[];\n  key?: string | number | null;\n  ref?: any;\n};\n\ntype ReactElement = {\n  type: string;\n  props: Props;\n  key: string | number | null;\n  ref: any;\n};\n\n\nconst React = {\n  createElement,\n  createRoot,\n}\n\nfunction createElement(type: string, props: Props, ...children: ReactElement[]): ReactElement {\n  const element = {\n    type,\n    props: {\n      ...props,\n      children\n    },\n    key: props.key ?? null,\n    ref: props.ref ?? null,\n  };\n\n  console.log(element);\n  return element;\n}\n\nfunction createRoot(domNode: HTMLElement) {\n  console.log(\"creating root with element: \", domNode);\n  return {\n    render: (element: ReactElement) => render(element, domNode),\n    unmount: () => unmount(domNode)\n  }\n}\n\nfunction render(element: ReactElement, domNode: HTMLElement) {\n  console.log(\"rendering element: \", element);\n\n  if (typeof element === 'string') {\n    domNode.appendChild(document.createTextNode(element));\n    return;\n  }\n\n  const newDomNode = document.createElement(element.type);\n  // copy props from element to new node\n  Object.keys(element.props).filter(key => key !== 'children').forEach(prop => newDomNode[prop] = element[prop]);\n  domNode.appendChild(newDomNode);\n\n  // recurse on children\n  element.props.children.forEach(child => render(child, newDomNode));\n}\n\nfunction unmount(root: HTMLElement) {\n  root.innerHTML = '';\n}\n\nconst test =\n  <div>\n    parent\n    <div>\n      child\n    </div>\n  </div>\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(test);"],"names":[],"version":3,"file":"index.ad9a7e97.js.map","sourceRoot":"/__parcel_source_root/"}